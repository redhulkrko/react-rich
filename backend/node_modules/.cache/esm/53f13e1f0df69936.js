let Joi,express,User,signUp,parseError,sessionizeUser;_0df‍.x([["default",()=>_0df‍.o]]);_0df‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_0df‍.w("express",[["default",["express"],function(v){express=v}]]);_0df‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_0df‍.w("../validations/user",[["signUp",["signUp"],function(v){signUp=v}]]);_0df‍.w("../util/helpers",[["parseError",["parseError"],function(v){parseError=v}],["sessionizeUser",["sessionizeUser"],function(v){sessionizeUser=v}]]);





const userRouter = express.Router();
userRouter.post("", async (req, res) => {
  try {
    const { username, email, password } = req.body
    await Joi.validate({ username, email, password }, signUp);
    const newUser = new User({ username, email, password });
    const sessionUser = sessionizeUser(newUser);
    await newUser.save();
    req.session.user = sessionUser;
    res.send({ sessionUser });
  } catch (err) {
    res.status(400).send(parseError(err));
  }
});
_0df‍.d(userRouter);