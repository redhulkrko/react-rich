let express,mongoose,session,connectStore,userRoutes,sessionRoutes,movieRoutes,PORT,NODE_ENV,MONGO_URI,SESS_NAME,SESS_SECRET,SESS_LIFETIME;_163‍.w("express",[["default",["express"],function(v){express=v}]]);_163‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_163‍.w("express-session",[["default",["session"],function(v){session=v}]]);_163‍.w("connect-mongo",[["default",["connectStore"],function(v){connectStore=v}]]);_163‍.w("./routes/index",[["userRoutes",["userRoutes"],function(v){userRoutes=v}],["sessionRoutes",["sessionRoutes"],function(v){sessionRoutes=v}],["movieRoutes",["movieRoutes"],function(v){movieRoutes=v}]]);_163‍.w("./config",[["PORT",["PORT"],function(v){PORT=v}],["NODE_ENV",["NODE_ENV"],function(v){NODE_ENV=v}],["MONGO_URI",["MONGO_URI"],function(v){MONGO_URI=v}],["SESS_NAME",["SESS_NAME"],function(v){SESS_NAME=v}],["SESS_SECRET",["SESS_SECRET"],function(v){SESS_SECRET=v}],["SESS_LIFETIME",["SESS_LIFETIME"],function(v){SESS_LIFETIME=v}]]);// ESM syntax is supported.







var cors = require('cors');

(async () => {
  try {
    await mongoose.connect(MONGO_URI, { useNewUrlParser: true });
    console.log('MongoDB connected');
const app = express();
app.use(cors({ origin: true, credentials: true }));
const MongoStore = connectStore(session);

app.disable('x-powered-by');
app.use(express.urlencoded({ extended: true }));
app.use(express.json());
app.use(session({
  name: SESS_NAME,
  secret: SESS_SECRET,
  saveUninitialized: false,
  resave: false,
  store: new MongoStore({
    mongooseConnection: mongoose.connection,
    collection: 'session',
    ttl: parseInt(SESS_LIFETIME) / 1000
  }),
  cookie: {
    sameSite: true,
    secure: NODE_ENV === 'production',
    maxAge: parseInt(SESS_LIFETIME)
  }
}));

const apiRouter = express.Router();
app.use('/api', apiRouter);
apiRouter.use('/users', userRoutes);
apiRouter.use('/session', sessionRoutes);
apiRouter.use('/movies', movieRoutes);

app.listen(PORT, () => console.log(`Listening on port ${PORT}`));
} catch (err) {
  _163‍.g.console.log(err)
}
})();
